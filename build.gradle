plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.flywaydb:flyway-core'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

task checkFlywayMigrationFilenamePrefixForUniqueness() {
  // Document the task
  group = "Verification"
  description = "Check Flyway migration filename prefix for uniqueness"

  // Provide the Action block
  doLast {

    // The default Flyway locations dir is src/main/resources/db/migration
    // So, go one level up, in case custom dirs are used
    def dir = "src/main/resources/db"

    // Get a list of filenames
    def filenames = fileTree(dir).files.name

    // Get a list of prefixes
    def prefixes = filenames.collect { it.split("__")[0] }

    // Check each prefix
    prefixes.each {

      // Save prefix to a var
      def prefix = it

      // Get how many times the prefix appears in the list
      def count = prefixes.count(prefix)

      // If the prefix is not unique, throw an exception
      if (count > 1) {

        // Get a list of guilty filenames
        def guiltyFilenames = filenames.findAll { it.startsWith("${prefix}__") }

        // Create an error message
        def message = "Flyway migration filename prefix is not unique for: ${prefix}"

        // For each guilty filename, add it to the error message
        guiltyFilenames.each { message += "\n${it}" }

        // Throw an exception
        throw new GradleException(message)
      }
    }
  }
}

// Tell it to run after the build task
build.finalizedBy(checkFlywayMigrationFilenamePrefixForUniqueness)
